// Used as a shorthand for setting the background of an element
@mixin bg($color:null, $image:null, $horiz:center, $vert:center, $repeat:no-repeat) {
	@if $color == null {
		background: url(#{imagePath($image)}) $horiz $vert $repeat;
	} @else {
		@if $image == null {
			background: $color;
		} @else {
			background: $color url(#{imagePath($image)}) $horiz $vert $repeat;
		}
	}
}

// Used for setting the background size to cover (aka. allowing the bg image to scale to fit the browser window)
@mixin bg-cover($color:null, $image:null) {
	@if $color == null {
		background: url(#{imagePath($image)}) no-repeat center center;
		-o-background-size: cover;
		-moz-background-size: cover;
		-webkit-background-size: cover;
		background-size: cover;
		filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{imagePath($image)}', sizingMethod='scale');
		-ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{imagePath($image)}', sizingMethod='scale')";
	} @else {
		@if $image == null {
			background: $color;
		} @else {
			background: $color url(#{imagePath($image)}) no-repeat center center;
			-o-background-size: cover;
			-moz-background-size: cover;
			-webkit-background-size: cover;
			background-size: cover;
			filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{imagePath($image)}', sizingMethod='scale');
			-ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{imagePath($image)}', sizingMethod='scale')";
		}
	}
}

// Used for setting the background size to cover (aka. allowing the bg image to scale to fit the browser window)
@mixin bg-cover-fixed($color:null, $image:null) {
	@if $color == null {
		background: url(#{imagePath($image)}) no-repeat center center fixed;
		-o-background-size: cover;
		-moz-background-size: cover;
		-webkit-background-size: cover;
		background-size: cover;
		filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{imagePath($image)}', sizingMethod='scale');
		-ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{imagePath($image)}', sizingMethod='scale')";
	} @else {
		@if $image == null {
			background: $color;
		} @else {
			background: $color url(#{imagePath($image)}) no-repeat center center fixed;
			-o-background-size: cover;
			-moz-background-size: cover;
			-webkit-background-size: cover;
			background-size: cover;
			filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{imagePath($image)}', sizingMethod='scale');
			-ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{imagePath($image)}', sizingMethod='scale')";
		}
	}
}

// Used for quickly applying a linear gradient to an element
@mixin linear-gradient($color1, $color2, $reverse:false) {
	@if $reverse == false {
		background: $color1; // Old browsers
		background: -moz-linear-gradient(top, $color1 0%, $color2 100%); // FF3.6+
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $color1), color-stop(100%, $color2)); // Chrome, Safari4+
		background: -webkit-linear-gradient(top, $color1 0%, $color2 100%); // Chrome10+, Safari5.1+
		background: -o-linear-gradient(top, $color1 0%, $color2 100%); // Opera 11.10+
		background: -ms-linear-gradient(top, $color1 0%, $color2 100%); // IE10+
		background: linear-gradient(to bottom, $color1 0%, $color2 100%); // W3C
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$color1', endColorstr='$color2', GradientType=0); // IE6-9
	} @else {
		background: $color2;
		background: -moz-linear-gradient(top, $color2 0%, $color1 100%);
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $color2), color-stop(100%, $color1));
		background: -webkit-linear-gradient(top, $color2 0%, $color1 100%);
		background: -o-linear-gradient(top, $color2 0%, $color1 100%);
		background: -ms-linear-gradient(top, $color2 0%, $color1 100%);
		background: linear-gradient(to bottom, $color2 0%, $color1 100%);
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$color2', endColorstr='$color1', GradientType=0);
	}
}

// Used for quickly applying a radial gradient to an element
@mixin radial-gradient($color1, $color2, $reverse:false) {
	@if $reverse == false {
		background: $color1; // Old browsers
		background: -moz-radial-gradient(center, ellipse cover, $color1 0%, $color2 100%); // FF3.6+
		background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, $color1), color-stop(100%, $color2)); // Chrome, Safari4+
		background: -webkit-radial-gradient(center, ellipse cover, $color1 0%, $color2 100%); // Chrome10+, Safari5.1+
		background: -o-radial-gradient(center, ellipse cover, $color1 0%, $color2 100%); // Opera 11.10+
		background: -ms-radial-gradient(center, ellipse cover, $color1 0%, $color2 100%); // IE10+
		background: radial-gradient(ellipse at center, $color1 0%, $color2 100%); // W3C
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$color1', endColorstr='$color2', GradientType=1); // IE6-9
	} @else {
		background: $color2;
		background: -moz-radial-gradient(center, ellipse cover, $color2 0%, $color1 100%);
		background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, $color2), color-stop(100%, $color1));
		background: -webkit-radial-gradient(center, ellipse cover, $color2 0%, $color1 100%);
		background: -o-radial-gradient(center, ellipse cover, $color2 0%, $color1 100%);
		background: -ms-radial-gradient(center, ellipse cover, $color2 0%, $color1 100%);
		background: radial-gradient(ellipse at center, $color2 0%, $color1 100%);
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$color2', endColorstr='$color1', GradientType=1);
	}
}

// Used for quickly applying a reflected gradient to an element
@mixin reflected-gradient($color1, $color2, $color3, $reverse:false) {
	@if $reverse == false {
		background: #a03020; // Old browsers
		background: -moz-linear-gradient(left, $color1 0%, $color2 50%, $color3 100%); // FF3.6+
		background: -webkit-gradient(linear, left top, right top, color-stop(0%, $color1), color-stop(50%, $color2), color-stop(100%, $color3)); // Chrome, Safari4+
		background: -webkit-linear-gradient(left, $color1 0%, $color2 50%, $color3 100%); // Chrome10+, Safari5.1+
		background: -o-linear-gradient(left, $color1 0%, $color2 50%, $color3 100%); // Opera 11.10+
		background: -ms-linear-gradient(left, $color1 0%, $color2 50%, $color3 100%); // IE10+
		background: linear-gradient(to right, $color1 0%, $color2 50%, $color3 100%); // W3C
		filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$color1', endColorstr='$color1', GradientType=1); // IE6-9
	} @else {

	}
}